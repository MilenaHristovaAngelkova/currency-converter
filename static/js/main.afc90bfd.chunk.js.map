{"version":3,"sources":["DisplayedData.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayedData","props","outputConversions","Object","entries","currencyRates","key","value","selectedOption","toUpperCase","Number","group1","group2","group3","sort","a","b","map","entry","className","toFixed","keys","length","App","currs","useState","isPending","setIsPending","errorM","setErrorM","setSelectedOption","setCurrencyRates","useEffect","fetch","then","res","ok","Error","json","data","temp","forEach","curr","catch","err","message","htmlFor","name","id","defaultValue","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afc90bfd.chunk.js","sourcesContent":["const DisplayedData = (props) => {\r\n    let outputConversions = {};\r\n    for (let [key, value] of Object.entries(props.currencyRates)) {\r\n        if (key !== props.selectedOption) {\r\n            outputConversions[`${props.selectedOption.toUpperCase()}-${key.toUpperCase()}`] = Number(value);\r\n            outputConversions[`${key.toUpperCase()}-${props.selectedOption.toUpperCase()}`] = 1 / Number(value);\r\n        }\r\n    }\r\n\r\n    let group1 = {};\r\n    let group2 = {};\r\n    let group3 = {};\r\n\r\n    Object.entries(outputConversions).sort((a, b) => {\r\n        return a[1] - b[1];\r\n    }).map(entry => {\r\n        if (entry[1] < 1) {\r\n           return group1[entry[0]] = entry[1];\r\n        } else if (entry[1] >= 1 && entry[1] < 1.5) {\r\n           return group2[entry[0]] = entry[1];\r\n        } else {\r\n           return group3[entry[0]] = entry[1];\r\n        }\r\n    });\r\n\r\n    return (\r\n        <article className=\"conversions\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{`Exchange Rates < 1`}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group1).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group1).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Exchange Rates between 1 and 1.5</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group2).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group2).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{`Exchange Rates > 1.5`}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group3).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group3).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </article>\r\n    );\r\n}\r\n \r\nexport default DisplayedData;","import { useState, useEffect } from 'react';\nimport DisplayedData from './DisplayedData';\nimport './App.css';\n\nfunction App() {\n  const currs = [\"usd\", \"eur\", \"aud\", \"cad\", \"chf\", \"nzd\", \"bgn\"];\n  const [isPending, setIsPending] = useState(true);\n  const [errorM, setErrorM] = useState(\"\");\n  const [selectedOption, setSelectedOption] = useState(\"usd\");\n  const [currencyRates, setCurrencyRates] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/\" + selectedOption + \".json\")\n      .then(res => {\n        if (!res.ok) {\n          setIsPending(false);\n          setErrorM(\"Could not peform the current fetch request.\");\n          throw new Error (\"Could not peform the current fetch request.\")\n        }\n        return res.json();\n      })\n      .then(data => {\n        let temp = {};\n        currs.forEach(curr => {\n          temp[curr] = data[selectedOption][curr];\n        })\n\n        setIsPending(false);\n        setCurrencyRates(temp);\n      })\n      .catch(err => {\n        setIsPending(false);\n        setErrorM(err.message);\n      })\n  }, [selectedOption]);\n\n  const handleChange = (e) => {\n    setSelectedOption(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <form>\n        <label htmlFor=\"currency\">See currency rates for:</label>\n        <select name=\"currency\" id=\"currency\" defaultValue=\"usd\" onChange={handleChange}>\n          {currs.map(curr => {\n            return(\n              <option value={curr} key={curr}>{curr.toUpperCase()}</option>\n            )\n          })}\n        </select>\n      </form>\n      {isPending && <p>Loading...</p>}\n      {errorM && <p>{ errorM }</p>}\n      {!isPending && <DisplayedData selectedOption={selectedOption} currencyRates={currencyRates} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}